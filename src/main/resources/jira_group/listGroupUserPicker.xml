<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<!-- Method Documentation URL: https://developer.atlassian.com/static/rest/jira/6.1.html#d2e776 -->
<template name="listGroupUserPicker" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="query" description="A string used to search username, Name or e-mail address."/>
    <parameter name="maxResults" description="The maximum number of users to return."/>
    <parameter name="isShowAvatar" description="The boolean value to show avatar."/>
    <parameter name="responseVariable" description="Name of the variable to store operation output"/>
    <parameter name="overwriteBody" description="Replace Message Body with operation output"/>
    <sequence>
        <property name="uri.var.query" expression="$func:query"/>
        <property name="uri.var.maxResults" expression="$func:maxResults"/>
        <property name="uri.var.isShowAvatar" expression="$func:isShowAvatar"/>
        <script language="js">
            <![CDATA[
         var query = mc.getProperty('uri.var.query');
         var isShowAvatar = mc.getProperty('uri.var.isShowAvatar');
         var maxResults = mc.getProperty('uri.var.maxResults');
         var urlQuery = '';
         if (query != null && query != ""){
            urlQuery += 'query=' + query + '&';
         }
         if (isShowAvatar != null && isShowAvatar != ""){
            urlQuery += 'showAvatar=' + isShowAvatar + '&';
         }
         if (maxResults != null && maxResults != ""){
            urlQuery += 'maxResults=' + maxResults + '&';
         }
         if (urlQuery != null && urlQuery != ""){
            urlQuery = '?' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&"));
         }
         mc.setProperty('uri.var.jira.urlQuery',urlQuery);
      ]]>
        </script>
        <filter source="$ctx:jiraBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="GET"
                              uri-template="{uri.var.jira.url}/rest/api/2/groupuserpicker{+uri.var.jira.urlQuery}"/>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="GET"
                              uri-template="{uri.var.jira.url}/rest/api/2/groupuserpicker{+uri.var.jira.urlQuery}"/>
                    </endpoint>
                </call>
            </else>
        </filter>
        <!-- Remove custom headers from the API response -->
        <header name="X-ASESSIONID" action="remove" scope="transport"/>
        <header name="X-AUSERNAME" action="remove" scope="transport"/>
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="X-Content-Type-Options" action="remove" scope="transport"/>
        <header name="X-ATENANT-ID" action="remove" scope="transport"/>
        <header name="Strict-Transport-Security" action="remove" scope="transport"/>
        <header name="Vary" action="remove" scope="transport"/>
        <header name="X-ASEN" action="remove" scope="transport"/>
        <header name="X-AREQUESTID" action="remove" scope="transport"/>
    </sequence>
</template>