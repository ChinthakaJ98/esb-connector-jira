<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<!-- Method Documentation URL: https://developer.atlassian.com/static/rest/jira/6.1.html#d2e168 -->
<template name="getAttachmentContent" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="attachmentUrl" description="The url of the attachment content."/>
    <parameter name="fileType" description="Type of the attachment."/>
    <parameter name="responseVariable" description="Name of the variable to store operation output"/>
    <parameter name="overwriteBody" description="Replace Message Body with operation output"/>
    <sequence>
        <property expression="$func:attachmentUrl" name="uri.var.attachmentUrl"/>
        <property expression="$func:fileType" name="fileType"/>
        <property name="POST_TO_URI" scope="axis2" value="true"/>
        <property name="REST_URL_POSTFIX" scope="axis2" action="remove"/>
        <filter source="$ctx:jiraBlocking" regex="true">
            <then>
                <property action="remove" name="NO_ENTITY_BODY" scope="axis2"/>
                <call blocking="true">
                    <endpoint>
                        <http method="GET" uri-template="{uri.var.attachmentUrl}"/>
                    </endpoint>
                </call>
                <property expression="$ctx:fileType" name="messageType" scope="axis2"/>
                <filter source="$axis2:HTTP_SC" regex="302">
                    <then>
                        <property expression="get-property('transport', 'Location')" name="uri.var.location"/>
                        <property action="remove" name="NO_ENTITY_BODY" scope="axis2"/>
                        <call blocking="true">
                            <endpoint>
                                <http method="GET" uri-template="{uri.var.location}"/>
                            </endpoint>
                        </call>
                        <property expression="$ctx:fileType" name="messageType" scope="axis2"/>
                    </then>
                </filter>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="GET" uri-template="{uri.var.attachmentUrl}"/>
                    </endpoint>
                </call>
                <filter source="$axis2:HTTP_SC" regex="302">
                    <then>
                        <property expression="get-property('transport', 'Location')" name="uri.var.location"/>
                        <call>
                            <endpoint>
                                <http method="GET" uri-template="{uri.var.location}"/>
                            </endpoint>
                        </call>
                    </then>
                </filter>
            </else>
        </filter>
        <!-- Remove custom headers from the API response -->
        <header name="X-ASESSIONID" action="remove" scope="transport"/>
        <header name="X-AUSERNAME" action="remove" scope="transport"/>
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="X-Content-Type-Options" action="remove" scope="transport"/>
        <header name="X-ATENANT-ID" action="remove" scope="transport"/>
        <header name="Strict-Transport-Security" action="remove" scope="transport"/>
        <header name="Vary" action="remove" scope="transport"/>
        <header name="X-ASEN" action="remove" scope="transport"/>
        <header name="X-AREQUESTID" action="remove" scope="transport"/>
    </sequence>
</template>
